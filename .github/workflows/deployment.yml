name: Build and Deploy Notebook FE to EC2

on:
    push:
        branches:
            - main
    # pull_request:
    #     branches:
    #         - main

jobs:
    build:
        runs-on: ubuntu-latest # The job will run on the latest Ubuntu environment

        env:
            VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }} # VITE_BASE_URL environment variable for build

        steps:
            - name: Check out the repository
              uses: actions/checkout@v4 # Checkout the repository to the workspace so we can use its code

            - name: Set up Node.js 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: "22.11.0"
                  cache: "npm"

            - name: Install dependencies
              run: |
                  npm ci  # Install dependencies from package-lock.json (clean install)

            - name: Lint code
              run: |
                  npm run lint  # Run ESLint to check TypeScript code for linting issues

            - name: Build the application
              run: |
                  touch .env
                  echo "VITE_BASE_URL=${VITE_BASE_URL}" > .env
                  npm run build  # Build the application

            - name: Upload build files as artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

    deploy:
        runs-on: ubuntu-latest
        needs: build # Ensure this job runs after the build job
        if: success() # Only run the deploy job if the build was successful

        env:
            EC2_HOST: ${{ secrets.EC2_HOST }} # EC2 instance public IP address or domain name
            EC2_USER: ${{ secrets.EC2_USER }} # SSH user (e.g., 'ubuntu')
            EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }} # Private key for SSH access
            DEPLOY_DIRECTORY: ${{ secrets.DEPLOY_DIRECTORY }} # Deployment directory on the EC2 instance

        steps:
            - name: Setup SSH key
              run: |
                  # Create the SSH directory and configure the private key
                  mkdir -p ~/.ssh
                  echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${EC2_HOST} >> ~/.ssh/known_hosts

            - name: Download build files from artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

            - name: Copy build files to EC2 host nginx folder
              run: |
                  scp -i ~/.ssh/id_rsa -r ./dist/* ${EC2_USER}@${EC2_HOST}:/var/www/${DEPLOY_DIRECTORY}

            - name: Restart nginx on EC2
              run: |
                  ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${EC2_USER}@${EC2_HOST} << EOF
                      sudo systemctl restart nginx
                  EOF
