name: Build and Deploy Notebook FE to EC2

on:
    push:
        branches:
            - main
    # pull_request:
    #     branches:
    #         - main

jobs:
    build:
        runs-on: ubuntu-latest # The job will run on the latest Ubuntu environment

        env:
            VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }} # VITE_BASE_URL environment variable for build
            VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }} # VITE_GOOGLE_CLIENT_ID environment variable for build
            VITE_BASE: ${{ secrets.VITE_BASE }} # VITE_BASE environment variable for build

        steps:
            - name: Check out the repository
              uses: actions/checkout@v4 # Checkout the repository to the workspace so we can use its code

            - name: Set up Node.js 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: "22.11.0"
                  cache: "npm"

            - name: Install dependencies
              run: |
                  npm ci  # Install dependencies from package-lock.json (clean install)

            - name: Lint code
              run: |
                  npm run lint  # Run ESLint to check TypeScript code for linting issues

            - name: Build the application
              run: |
                  touch .env
                  echo "VITE_BASE_URL=${VITE_BASE_URL}" > .env
                  echo "VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}" >> .env
                  echo "VITE_BASE=${VITE_BASE}" >> .env
                  npm run build  # Build the application

            - name: Upload build files as artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

    deploy:
        runs-on: ubuntu-latest
        needs: build # Ensure this job runs after the build job
        if: success() # Only run the deploy job if the build was successful

        env:
            AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }} # AWS CloudFront ID
            AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }} # AWS S3 Bucket name
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS Access Key ID
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS Secret Access Key
            AWS_REGION: ${{ secrets.AWS_REGION }} # AWS region

        steps:
            - name: Download build files from artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Upload build files to S3
              run: |
                  aws s3 sync ./dist/ s3://$AWS_S3_BUCKET_NAME/dist/ --delete

            - name: Invalidate CloudFront cache
              run: |
                  aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_ID} --paths "/dist/*"
